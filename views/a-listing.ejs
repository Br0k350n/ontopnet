<!DOCTYPE html>
<html lang="en">
    <%- include('partials/head', {title: "Server Listing Management", tag: "CoT Admin", isAdmin: true}); %>
<body>
    <%- include('partials/header', {session: session}); %>
    
    <div class="w-full layout-container lc-home">
        <div class="index-layout">
          <%- include('partials/admin-cat'); %>
            <div class="body-container">
                <main class="index-content">
                    <section class="content">
                        <!-- Forms Section Split in Half -->
                        <div class="forms-container">
                            <!-- Add Server Form -->
                            <div class="form-section half-width">
                              <h2>Add a New Server</h2>
                              <form action="/admin/add-server" method="POST" class="styled-form">
                                  <label for="ip">Server IP/Invite link:</label>
                                  <input type="text" id="ip" name="ip" required>
                                  
                                  <label for="rank">Rank:</label>
                                  <input type="number" id="rank" name="rank">
                              
                                  <fieldset>
                                    <legend>Premium Membership:</legend>
                                    <label>
                                      <input type="radio" id="neither" name="membership" value="neither" checked> Neither
                                    </label>
                                    <label>
                                      <input type="radio" id="premium" name="membership" value="premium"> Premium
                                    </label>
                                    <label>
                                      <input type="radio" id="premiumPlus" name="membership" value="premiumPlus"> Premium+
                                    </label>
                                  </fieldset>
                                
                                  <button type="submit">Add Server</button>
                              </form>
                            </div>

                            <!-- Feature City Form -->
                            <div class="form-section half-width">
                            <h2>Make a City Featured</h2>
                            <form action="/admin/feature-city" method="POST" class="styled-form">
                                <label for="city">City ID:</label>
                                <input type="text" id="city" name="city" required>

                                <label for="duration">Duration (in days):</label>
                                <input type="number" id="duration" name="duration" required>

                                <label for="tier">Tier:</label>
                                <select id="tier" name="tier" required>
                                  <option value="Gold">Gold</option>
                                  <option value="Silver">Silver</option>
                                  <option value="Bronze">Bronze</option>
                                </select>

                                <button type="submit">Feature City</button>
                            </form>
                            </div>
                        </div>
                        <!-- Server Listing Management Section -->
                        <div class="table-container" id="server-listing-management">
                            <h3>Server Listing Management</h3>
                            <table>
                              <thead>
                                <tr>
                                  <th>#</th>
                                  <th>Server Name</th>
                                  <th>IP Address</th>
                                  <th>Owner</th>
                                  <th>Status</th>
                                  <th>Actions</th>
                                </tr>
                              </thead>
                              <tbody>
                                <% servers.forEach((server, index) => { %>
                                  <tr style="cursor: pointer;">
                                    <td><%= index + 1 %></td>
                                    <td><%= server.serverName %></td>
                                    <td><%= server.ip %></td>
                                    <td><p onclick="viewUser('<%= server.owner %>')" style="cursor: pointer; text-decoration: underline;"><%= server.owner %></p></td>
                                    <td><%= server.status ? "Online" : "Offline" %></td>
                                    <td class="action-buttons">
                                      <a href="/admin/edit-city/<%= server.id %>" class="button edit-btn"><button class="edit-btn">Edit</button></a>
                                      <button class="remove-btn remove-button removeServerBtn" data-server-id="<%= server.id %>">Remove</button>
                                    </td>
                                  </tr>
                                <% }); %>
                              </tbody>
                            </table>
                        </div>


                        <!-- Modals Section - Place this AFTER the table -->
                        <% servers.forEach((server) => { %>
                          <div id="confirmModal-<%= server.id %>" class="confirmModal">
                            <div class="modal-content">
                              <p>Are you sure you want to remove "<%= server.serverName %>"?</p>
                              <form action="/admin/delete-city" method="post">
                                <input type="hidden" name="serverId" value="<%= server.id %>">
                                <button type="submit" class="confirm-delete">Confirm</button>
                                <button type="button" class="cancel-delete-btn">Cancel</button>
                              </form>
                            </div>
                          </div>
                        <% }); %>
                        <!-- Pagination for Server Listing Management -->
                        <div class="pagination pagination-server-listing">
                          <% for (let i = 1; i <= Math.ceil(totalServers / itemsPerPage); i++) { %>
                            <button class="pagination-btn <%= i === currentPage ? 'active' : '' %>" data-page="<%= i %>"><%= i %></button>
                          <% } %>
                        </div>
                      </section>
                </main>
            </div> 
        </div>
    </div>
    
    <%- include('partials/userModal'); %>
    <%- include('partials/footer'); %>

    <script>
      // Declare current user's permission level (assumes session.user.isAdmin exists)
      const currentUserIsAdmin = <%= session.user.isAdmin %>;
  
      // Function to view user details
      function viewUser(userId) {
          // Show the modal
          const modal = document.getElementById("userModal");
          modal.style.display = "block";
      
          // Fetch user details
          fetch(`/admin/users/${userId}`)
              .then(response => response.json())
              .then(userData => {
                  const roleText = userData.isAdmin === 2 ? "Admin" : userData.isAdmin === 1 ? "Staff" : "User";
  
                  // Populate the modal with user data
                  const modalUserDetails = document.getElementById("modalUserDetails");
                  const modalButtons = document.getElementById('modalButtons');
                  const lastActivity = userData.activity && userData.activity.length > 0 ? userData.activity[0] : null;
                  modalUserDetails.innerHTML = `
                      <img src="${userData.avatar || '/imgs/default-avatar.png'}" class="user-avatar" alt="User Avatar">
                      <p><strong>Username:</strong> ${userData.username}</p>
                      <p><strong>Email:</strong> ${userData.email}</p>
                      <p><strong>Discord:</strong> ${userData.discord_id || "Not linked"}</p>
                      <p><strong>Role:</strong> ${roleText}</p>
                      <p><strong>Last Login:</strong> ${lastActivity && lastActivity.timestamp ? new Date(lastActivity.timestamp).toLocaleDateString() : "Never"}</p>
                      <p><strong>Login Method:</strong> ${lastActivity && lastActivity.method ? lastActivity.method : "N/A"}</p>
                  `;
  
                  // Build the buttons HTML
                  let buttonsHTML = `
                      <button class="password-btn" onclick="changePassword(${userData.id})">Change Password</button>
                      <button class="warn-btn" onclick="warnUser(${userData.id})">Warn</button>
                      <button class="ban-btn" onclick="banUser(${userData.id})">Ban</button>
                  `;
                  modalButtons.innerHTML = buttonsHTML;
              });
      }
  
      // Functions for buttons
      function changePassword(userId) {
          const newPassword = prompt("Enter a new password:");
          if (newPassword) {
              fetch(`/admin/users/${userId}/change-password`, {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ password: newPassword })
              }).then(() => alert("Password changed successfully!"));
          }
      }
  
      function warnUser(userId) {
          const warningMessage = prompt("Enter the reason for the warning:");
          if (warningMessage) {
              if (confirm("Are you sure you want to warn this user?")) {
                  fetch(`/admin/users/warn`, {
                      method: "POST",
                      headers: { "Content-Type": "application/json" },
                      body: JSON.stringify({ userId: userId, message: warningMessage })
                  }).then(() => alert("User warned successfully!"));
              }
          } else {
              alert("Warning message cannot be empty.");
          }
      }
  
      function banUser(userId) {
          if (confirm("Are you sure you want to ban this user?")) {
              fetch(`/admin/users/${userId}/ban`, { method: "POST" })
                  .then(() => alert("User banned successfully!"));
          }
      }
  
      // Function to close the modal
      function closeModal() {
          const modal = document.getElementById("userModal");
          modal.style.display = "none";
      }
      const itemsPerPage = <%= itemsPerPage %>;
      let currentPage = <%= currentPage %>;
  
      document.querySelectorAll('.pagination-btn').forEach(btn => {
          btn.addEventListener('click', () => {
              const page = btn.getAttribute('data-page');
              window.location.href = `/admin/dashboard?page=${page}`;
          });
      });
  
      // Highlight the current page dynamically
      const currentDir = window.location.pathname;
      document.querySelectorAll('.cat-nav a').forEach(link => {
          if (link.getAttribute('href') === currentDir) {
              link.classList.add('active');
          }
      });
   </script>
  
</body>

</html>
